[Servlet]
- 동적 웹어플리케이션 컴포넌트
- 확장자: .java
- 클라이언트 요청에 동적으로 작동, 응답은 html 이용
- Controller로 이용
- 기본 입력 방식 java
- URL Mapping: 길고 보안에 노출되어 있는 경로를 간단하게 변경 (두 가지 방식: annotation, web.xml)  
- HttpServlet 클래스를 상속 받음
- 요청처리객체 & 응답처리객체를 톰캣에서 받음: HttpServletRequest request, HttpServletResponse response
- PrintWriter writer = response.getWriter();
  writer.println("<html>"); 방식으로 html문구 입력 

- 페이지 처음 호출될 때 최초 한번만 객체가 만들어지고 그 이후로는 스레드로 작업할당을 해주는 방식 (이미 메모리에 저장되어 있는 것을 불러오는)
- 새로 객체를 만드는 경우: 시스템을 종료 했다가 시작할 경우, 소스 변경이 있는 경우 
- 톰캣에서 jsp, servlet을 관리/생성함

- 생명주기: Servlet 객체 생성 (최초 한번) -> 선처리(@PostConstruct) -> Init()호출 -> service(),doGet(),doPost() 호출->destroy()호출 ->후처리(@PreDestroy)

- 서블릿 초기화 파라미터(ServletConfig): 서블릿 생성 시, 초기에 필요한 데이터들
  web.xml에 기술
  <init-param>
  	<param-name>id</param-name>
  	<param-value>admin<param-value>
  </init-param>

   서블릿 파일에서 ServletConfig 클래스 이용해서 접근/사용 
  String id =getinitParameter("id);
  
  
  [유효성검사]
  ^:첫번쨰 자리
  $:마지막 자리
  {1,14}:입력 길이 체크 
  .: 하나씩 뽑아내서 비교
  ex) var id_check = /^[a-zA-Z][a-zA-Z0-9]{2,14}$/; 
      -> 첫번째 자리가 영문 대소문자 이어야 하고, 그 이후 나머지 자리(2~14자리까지)는 영문 대소문자나 숫자 이어야 한다.
      var pw_check = (/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+|<>?]).{1,}$/);
      -> 한개 이상씩 포함되어 있는지
      
      
      
 [액션태크]
 1) forward: 현재 페이지에서 다른 특정 페이지로 전환할 때 사용 (주소는 변하지 않지만 웹에 보여지는 내용은 연결된 다른 페이지가 보여짐)
    <jsp:forward page="파일명.jsp" /> 
 2) include: 현재 페이지에 다른 페이지 삽입 시 사용
	<jsp:include page="파일명.jsp" /> 
	지시자에도 include지시자가 있음  : <%@ include file="파일명.jsp" %>  
 3) param: forward 및 include 태그에 데이터 전달을 목적으로 사용
 	<jsp:forward page="파일명.jsp"> 
 		<jsp:param name="id" value="admin" />
 		<jsp:param name="name" value='<%=URLEncoder.encode("홍길동", "utf-8") %>' />
 	</jsp:forward>
 	
 	한글 전달 받을 경우에는 URLDecoder 필요
 	<%=URLDecoder.decode(request.getParameter("name"), "utf-8" %>
 	
 	 
 [입력값 넘기는 방법 3가지]
  1) form
  2) 파라미터
  3) param	